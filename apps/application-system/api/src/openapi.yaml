openapi: 3.0.0
info:
  title: Application backend
  description: This is provided as a reference to implement other backends.
  version: '1.0'
  contact: {}
tags:
  - name: application
    description: ''
servers: []
components:
  schemas:
    Liveness:
      type: object
      properties:
        ok:
          type: boolean
      required:
        - ok
    Version:
      type: object
      properties:
        version:
          type: string
      required:
        - version
    Application:
      type: object
      properties:
        id:
          type: string
        created:
          format: date-time
          type: string
        modified:
          format: date-time
          type: string
        applicant:
          type: string
        assignee:
          type: string
        externalId:
          type: string
        state:
          type: string
        attachments:
          type: object
        typeId:
          type: string
          enum:
            - ExampleForm
            - DrivingLessons
            - ParentalLeave
        answers:
          type: object
        externalData:
          type: object
      required:
        - id
        - created
        - modified
        - applicant
        - assignee
        - state
        - typeId
        - answers
        - externalData
    CreateApplicationDto:
      type: object
      properties:
        typeId:
          type: string
          enum:
            - ExampleForm
            - DrivingLessons
            - ParentalLeave
        applicant:
          type: string
        assignee:
          type: string
        externalId:
          type: string
        state:
          type: string
        answers:
          type: object
        attachments:
          type: object
      required:
        - typeId
        - applicant
        - assignee
        - state
        - answers
    UpdateApplicationDto:
      type: object
      properties:
        applicant:
          type: string
        assignee:
          type: string
        externalId:
          type: string
        answers:
          type: object
        attachments:
          type: object
    DataProviderDto:
      type: object
      properties:
        id:
          type: string
        type:
          type: string
          enum:
            - ExpectedDateOfBirth
            - ExampleFails
            - ExampleSucceeds
            - ParentalLeaveSalary
      required:
        - id
        - type
    PopulateExternalDataDto:
      type: object
      properties:
        dataProviders:
          type: array
          items:
            $ref: '#/components/schemas/DataProviderDto'
      required:
        - dataProviders
    UpdateApplicationStateDto:
      type: object
      properties:
        event:
          type: string
        answers:
          type: object
      required:
        - event
    AddAttachmentDto:
      type: object
      properties:
        key:
          type: string
        url:
          type: string
      required:
        - key
        - url
    DeleteAttachmentDto:
      type: object
      properties:
        key:
          type: string
      required:
        - key
paths:
  /liveness:
    get:
      operationId: InfraController_liveness
      parameters: []
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Liveness'
      tags:
        - internal
  /version:
    get:
      operationId: InfraController_version
      parameters: []
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Version'
      tags:
        - internal
  '/application/{id}':
    get:
      operationId: ApplicationController_findOne
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Application'
      tags:
        - application
    put:
      operationId: ApplicationController_update
      parameters:
        - name: id
          required: true
          in: path
          description: The id of the application to update.
          allowEmptyValue: false
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateApplicationDto'
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Application'
      tags:
        - application
  /application:
    get:
      operationId: ApplicationController_findAll
      parameters:
        - name: typeId
          required: true
          in: query
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Application'
      tags:
        - application
    post:
      operationId: ApplicationController_create
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateApplicationDto'
      responses:
        '201':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Application'
      tags:
        - application
  '/application/{id}/externalData':
    put:
      operationId: ApplicationController_updateExternalData
      parameters:
        - name: id
          required: true
          in: path
          description: The id of the application to update the external data for.
          allowEmptyValue: false
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PopulateExternalDataDto'
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Application'
      tags:
        - application
  '/application/{id}/submit':
    put:
      operationId: ApplicationController_submitApplication
      parameters:
        - name: id
          required: true
          in: path
          description: The id of the application to update the state for.
          allowEmptyValue: false
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateApplicationStateDto'
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Application'
      tags:
        - application
  '/application/{id}/attachments':
    put:
      operationId: ApplicationController_addAttachment
      parameters:
        - name: id
          required: true
          in: path
          description: The id of the application to update the attachments for.
          allowEmptyValue: false
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddAttachmentDto'
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Application'
      tags:
        - application
    delete:
      operationId: ApplicationController_deleteAttachment
      parameters:
        - name: id
          required: true
          in: path
          description: The id of the application to delete attachment(s) from.
          allowEmptyValue: false
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteAttachmentDto'
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Application'
      tags:
        - application
