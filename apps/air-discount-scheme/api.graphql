# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type Taxonomy {
  title: String
  slug: String
  description: String
}

type Article {
  id: String!
  slug: String!
  title: String!
  content: String
  group: Taxonomy
  category: Taxonomy
  relatedArticles: [Article!]!
}

type AdgerdirTag {
  id: String
  title: String
}

type AdgerdirPage {
  id: String!
  title: String!
  description: String!
  longDescription: String
  content: String
  objective: String
  slug: String!
  tags: [AdgerdirTag!]!
  link: String
  linkButtonText: String
  status: String!
  estimatedCostIsk: Float
  finalCostIsk: Float
}

type Image {
  url: String!
  title: String!
  contentType: String!
  width: Int!
  height: Int!
}

type AdgerdirNews {
  id: String!
  slug: String!
  subtitle: String!
  title: String!
  intro: String!
  image: Image
  date: String!
  content: String
  pages: [AdgerdirPage!]
}

type AdgerdirPages {
  items: [AdgerdirPage!]!
}

type AdgerdirFrontpage {
  id: String!
  title: String!
  description: String!
  content: String
  slices: [AdgerdirSlice!]!
}

union AdgerdirSlice = AdgerdirGroupSlice | AdgerdirFeaturedNewsSlice

type AdgerdirGroupSlice {
  id: ID!
  subtitle: String
  title: String!
  description: String
  image: Image
  pages: [AdgerdirPage!]!
}

type AdgerdirFeaturedNewsSlice {
  id: ID!
  title: String!
  featured: [AdgerdirNews!]!
}

type FrontpageSlide {
  subtitle: String
  title: String
  content: String
  image: Image
  link: String
}

type FrontpageSliderList {
  items: [FrontpageSlide!]!
}

type News {
  id: String!
  slug: String!
  title: String!
  subtitle: String!
  intro: String!
  image: Image
  date: String!
  content: String
}

type Pagination {
  page: Int!
  perPage: Int!
  totalResults: Int!
  totalPages: Int!
}

type PaginatedNews {
  page: Pagination!
  news: [News!]!
}

type Namespace {
  namespace: String
  fields: String
}

type Link {
  text: String!
  url: String!
}

type TimelineEvent {
  id: ID!
  title: String!
  date: String!
  numerator: Int
  denominator: Int
  label: String!
  body: String
  tags: [String!]!
  link: String!
}

type Story {
  label: String!
  title: String!
  logo: Image!
  readMoreText: String!
  date: String!
  intro: String!
  body: String
}

type LinkCard {
  title: String!
  body: String!
  link: String!
  linkText: String!
}

type NumberBullet {
  id: ID!
  title: String!
  body: String!
}

type AboutPage {
  title: String!
  seoDescription: String!
  theme: String!
  slices: [Slice!]!
}

union Slice = PageHeaderSlice | TimelineSlice | HeadingSlice | StorySlice | LinkCardSlice | LatestNewsSlice | MailingListSignupSlice | LogoListSlice | BulletListSlice

type PageHeaderSlice {
  id: ID!
  title: String!
  introduction: String!
  navigationText: String!
  links: [Link!]!
  slices: [Slice!]!
}

type TimelineSlice {
  id: ID!
  title: String!
  events: [TimelineEvent!]!
}

type HeadingSlice {
  id: ID!
  title: String!
  body: String!
}

type StorySlice {
  id: ID!
  readMoreText: String!
  stories: [Story!]!
}

type LinkCardSlice {
  id: ID!
  title: String!
  cards: [LinkCard!]!
}

type LatestNewsSlice {
  id: ID!
  title: String!
  news: [News!]!
}

type MailingListSignupSlice {
  id: ID!
  title: String!
  description: String
  inputLabel: String!
  buttonText: String!
}

type LogoListSlice {
  id: ID!
  title: String!
  body: String!
  images: [Image!]!
}

type BulletListSlice {
  id: ID!
  bullets: [BulletEntry!]!
}

union BulletEntry = IconBullet | NumberBulletGroup

type IconBullet {
  id: ID!
  title: String!
  body: String!
  icon: Image!
  url: String
  linkText: String
}

type NumberBulletGroup {
  id: ID!
  defaultVisible: Int!
  bullets: [NumberBullet!]!
}

type LinkList {
  title: String
  links: [Link!]!
}

type LandingPage {
  title: String!
  slug: String!
  introduction: String!
  image: Image
  actionButton: Link
  links: LinkList
  content: String
}

type GenericPage {
  title: String!
  slug: String!
  intro: String
  mainContent: String
  sidebar: String
  misc: String
}

type Menu {
  title: String!
  links: [Link!]!
}

type AdgerdirTags {
  items: [AdgerdirTag!]!
}

type LifeEventPage {
  title: String!
  slug: String!
  intro: String!
  image: Image!
  body: JSON!
}

"""
The `JSON` scalar type represents JSON values as specified by [ECMA-404](http://www.ecma-international.org/publications/files/ECMA-ST/ECMA-404.pdf).
"""
scalar JSON @specifiedBy(url: "http://www.ecma-international.org/publications/files/ECMA-ST/ECMA-404.pdf")

type PaginatedAdgerdirNews {
  page: Pagination!
  news: [AdgerdirNews!]!
}

type Fund {
  credit: Float!
  used: Float!
  total: Float!
}

type UserInfo {
  gender: String!
  age: Float!
  postalCode: Float!
}

type Flight {
  id: ID!
  airline: String!
  bookingDate: String!
  travel: String!
  user: User!
  userInfo: UserInfo!
}

type User {
  nationalId: ID!
  name: String!
  mobile: String
  role: String!
  fund: Fund
  meetsADSRequirements: Boolean!
  flights: [Flight!]!
}

type Discount {
  nationalId: ID!
  discountCode: String!
  expiresIn: Float!
  user: User!
}

type Query {
  getArticle(input: GetArticleInput!): Article
  getNews(input: GetNewsInput!): News
  getNewsList(input: GetNewsListInput!): PaginatedNews!
  getAdgerdirNewsList(input: GetAdgerdirNewsListInput!): PaginatedAdgerdirNews!
  getNamespace(input: GetNamespaceInput!): Namespace
  getAboutPage(input: GetAboutPageInput!): AboutPage!
  getLandingPage(input: GetLandingPageInput!): LandingPage
  getGenericPage(input: GetGenericPageInput!): GenericPage
  getAdgerdirPage(input: GetAdgerdirPageInput!): AdgerdirPage
  getAdgerdirNews(input: GetAdgerdirNewsInput!): AdgerdirNews
  getAdgerdirPages(input: GetAdgerdirPagesInput!): AdgerdirPages!
  getAdgerdirTags(input: GetAdgerdirTagsInput!): AdgerdirTags
  getFrontpageSliderList(input: GetFrontpageSliderListInput!): FrontpageSliderList
  getAdgerdirFrontpage(input: GetAdgerdirFrontpageInput!): AdgerdirFrontpage
  getMenu(input: GetMenuInput!): Menu
  getLifeEventPage(input: GetLifeEventPageInput!): LifeEventPage
  flights(input: FlightsInput!): [Flight!]!
  user: User
  discounts: [Discount!]
}

input GetArticleInput {
  slug: String
  lang: String!
}

input GetNewsInput {
  slug: String!
  lang: String
}

input GetNewsListInput {
  lang: String
  year: Int
  month: Int
  ascending: Boolean
  page: Int
  perPage: Int
}

input GetAdgerdirNewsListInput {
  lang: String
  year: Int
  month: Int
  ascending: Boolean
  page: Int
  perPage: Int
}

input GetNamespaceInput {
  namespace: String
  lang: String!
}

input GetAboutPageInput {
  lang: String!
}

input GetLandingPageInput {
  slug: String!
  lang: String!
}

input GetGenericPageInput {
  slug: String!
  lang: String!
}

input GetAdgerdirPageInput {
  slug: String
  lang: String!
}

input GetAdgerdirNewsInput {
  slug: String
  lang: String!
}

input GetAdgerdirPagesInput {
  lang: String
  perPage: Int
}

input GetAdgerdirTagsInput {
  lang: String
}

input GetFrontpageSliderListInput {
  lang: String
}

input GetAdgerdirFrontpageInput {
  lang: String!
}

input GetMenuInput {
  name: String!
  lang: String!
}

input GetLifeEventPageInput {
  slug: String!
  lang: String!
}

input FlightsInput {
  airline: String
  flightLeg: FlightLeg
  period: Period
  state: String
  age: Range
  gender: String
  postalCode: Float
}

input FlightLeg {
  from: String!
  to: String!
}

input Period {
  from: DateTime!
  to: DateTime!
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

input Range {
  from: Float!
  to: Float!
}
