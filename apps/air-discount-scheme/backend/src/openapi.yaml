openapi: 3.0.0
info:
  title: Air Discount Scheme
  description: |2-

          This documentation is provided to airline booking sites for
          integration purposes.

          WARNING: While you are developing this integration the Discounts
          endpoint POST /api/public/users/{nationalId}/discounts is
          available to create a discount for any national id. We will
          remove it when we go live. This functionality of creating
          discounts should only be available to the user who is registered
          for it.

          If there exists an ID attribute on any object, that ID refers
          to a unique identifier of the object it is in. If the object
          has an additional ID, something like flightId that refers to
          an unique identifier of an object that is related to the
          current one.

          The flow is like this:

            1.  First create a discount through the
                POST /api/public/users/{nationalId}/discounts endpoint.
                Any valid nationalId will work. Notice the warning above
                about this endpoint.


            2.  Use the discount to book a flight on your end:

              2a. First you need to fetch the user that is registered to this
                  discountCode by calling
                  GET /api/public/discounts/{discountCode}/user.
                  This endpoint will return user specific information that
                  should be populated on your booking page and made readonly
                  so the user can not change it.

              2b. Then you can create a flight. A flight contains all the
                  relevant information about the booking from the customer.
                  Use POST /api/public/discounts/{discountCode}/flights.
                  When this endpoint is used the discountCode is
                  invalidated, so the user can not use it and needs
                  to generate a new discountCode (step 1).


            3.  When you have created a flight you have the possibility
                to delete it. For example if a payment failure has
                occurred. You can use the ID that you received when
                creating the flight to delete it. You have two possibilities:

              3a. You can either delete all related flightLegs that were
                  booked by calling
                  DELETE /api/public/flights/{flightId}

              3b. Or delete specific flightLegs within the booking by:

                3ba. First fetching the related flightLegs by calling
                     GET /api/public/flights/{flightId}

                3bb. Then use the flightLeg IDs from "3ba." result
                     to delete the desired flightLegs by calling
                     DELETE /api/public/flights/{flightId}/flightLegs/{flightLegId}
        
  version: '1.0'
  contact: {}
tags: []
servers: []
components:
  securitySchemes:
    bearer:
      scheme: bearer
      bearerFormat: JWT
      type: http
  schemas:
    Liveness:
      type: object
      properties:
        ok:
          type: boolean
      required:
        - ok
    Version:
      type: object
      properties:
        version:
          type: string
      required:
        - version
    Discount:
      type: object
      properties:
        discountCode:
          type: string
        nationalId:
          type: string
        expiresIn:
          type: number
      required:
        - discountCode
        - nationalId
        - expiresIn
    FlightLegDto:
      type: object
      properties:
        origin:
          type: string
        destination:
          type: string
        originalPrice:
          type: number
        discountPrice:
          type: number
        date:
          format: date-time
          type: string
      required:
        - origin
        - destination
        - originalPrice
        - discountPrice
        - date
    FlightDto:
      type: object
      properties:
        bookingDate:
          format: date-time
          type: string
        flightLegs:
          type: array
          items:
            $ref: '#/components/schemas/FlightLegDto'
      required:
        - bookingDate
        - flightLegs
    FlightLeg:
      type: object
      properties:
        id:
          type: string
        origin:
          type: string
        destination:
          type: string
        originalPrice:
          type: number
        discountPrice:
          type: number
        financialState:
          type: string
        date:
          format: date-time
          type: string
        created:
          format: date-time
          type: string
        modified:
          format: date-time
          type: string
      required:
        - id
        - origin
        - destination
        - originalPrice
        - discountPrice
        - financialState
        - date
        - created
        - modified
    Flight:
      type: object
      properties:
        id:
          type: string
        nationalId:
          type: string
        airline:
          type: string
        bookingDate:
          format: date-time
          type: string
        flightLegs:
          type: array
          items:
            $ref: '#/components/schemas/FlightLeg'
        created:
          format: date-time
          type: string
        modified:
          format: date-time
          type: string
      required:
        - id
        - nationalId
        - airline
        - bookingDate
        - flightLegs
        - created
        - modified
    Fund:
      type: object
      properties:
        credit:
          type: number
          description: Determines if the user has any discount credits left
        used:
          type: number
        total:
          type: number
      required:
        - credit
        - used
        - total
    AirlineUser:
      type: object
      properties:
        firstName:
          type: string
        middleName:
          type: string
        lastName:
          type: string
        gender:
          type: string
          enum:
            - kvk
            - kk
        nationalId:
          type: string
        fund:
          $ref: '#/components/schemas/Fund'
      required:
        - firstName
        - middleName
        - lastName
        - gender
        - nationalId
        - fund
paths:
  /liveness:
    get:
      operationId: InfraController_liveness
      parameters: []
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Liveness'
      tags:
        - internal
  /version:
    get:
      operationId: InfraController_version
      parameters: []
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Version'
      tags:
        - internal
  '/api/public/users/{nationalId}/discounts':
    post:
      operationId: PublicDiscountController_createDiscountCode
      parameters:
        - name: nationalId
          required: true
          in: path
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Discount'
      tags:
        - Discounts
      security:
        - bearer: []
  '/api/public/discounts/{discountCode}/flights':
    post:
      operationId: PublicFlightController_create
      parameters:
        - name: discountCode
          required: true
          in: path
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FlightDto'
      responses:
        '201':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Flight'
      tags:
        - Flights
      security:
        - bearer: []
  '/api/public/flights/{flightId}':
    get:
      operationId: PublicFlightController_getFlightById
      parameters:
        - name: flightId
          required: true
          in: path
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Flight'
      tags:
        - Flights
      security:
        - bearer: []
    delete:
      operationId: PublicFlightController_delete
      parameters:
        - name: flightId
          required: true
          in: path
          schema:
            type: string
      responses:
        '204':
          description: ''
      tags:
        - Flights
      security:
        - bearer: []
  '/api/public/flights/{flightId}/flightLegs/{flightLegId}':
    delete:
      operationId: PublicFlightController_deleteFlightLeg
      parameters:
        - name: flightId
          required: true
          in: path
          schema:
            type: string
        - name: flightLegId
          required: true
          in: path
          schema:
            type: string
      responses:
        '204':
          description: ''
      tags:
        - Flights
      security:
        - bearer: []
  '/api/public/discounts/{discountCode}/user':
    get:
      operationId: PublicUserController_getUserByDiscountCode
      parameters:
        - name: discountCode
          required: true
          in: path
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AirlineUser'
      tags:
        - Users
      security:
        - bearer: []
