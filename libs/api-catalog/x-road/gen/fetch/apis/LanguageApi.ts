/* tslint:disable */
/* eslint-disable */
/**
 * X-Road Security Server Admin API
 * X-Road Security Server Admin API
 *
 * The version of the OpenAPI document: 1.0.28
 * Contact: info@niis.org
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';
import {
    Language,
    LanguageFromJSON,
    LanguageToJSON,
} from '../models';

export interface LanguageRequest {
    code: string;
}

/**
 * 
 */
export class LanguageApi extends runtime.BaseAPI {

    /**
     * Administrator changes the language for the UI.
     * change language
     */
    async languageRaw(requestParameters: LanguageRequest): Promise<runtime.ApiResponse<Language>> {
        if (requestParameters.code === null || requestParameters.code === undefined) {
            throw new runtime.RequiredError('code','Required parameter requestParameters.code was null or undefined when calling language.');
        }

        const queryParameters: runtime.HTTPQuery = {};

        const headerParameters: runtime.HTTPHeaders = {};

        if (this.configuration && this.configuration.apiKey) {
            headerParameters["Authorization"] = this.configuration.apiKey("Authorization"); // ApiKeyAuth authentication
        }

        const response = await this.request({
            path: `/language`.replace(`{${"code"}}`, encodeURIComponent(String(requestParameters.code))),
            method: 'PUT',
            headers: headerParameters,
            query: queryParameters,
        });

        return new runtime.JSONApiResponse(response, (jsonValue) => LanguageFromJSON(jsonValue));
    }

    /**
     * Administrator changes the language for the UI.
     * change language
     */
    async language(requestParameters: LanguageRequest): Promise<Language> {
        const response = await this.languageRaw(requestParameters);
        return await response.value();
    }

}
