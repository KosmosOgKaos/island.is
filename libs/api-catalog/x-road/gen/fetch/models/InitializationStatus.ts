/* tslint:disable */
/* eslint-disable */
/**
 * X-Road Security Server Admin API
 * X-Road Security Server Admin API
 *
 * The version of the OpenAPI document: 1.0.28
 * Contact: info@niis.org
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    TokenInitStatus,
    TokenInitStatusFromJSON,
    TokenInitStatusFromJSONTyped,
    TokenInitStatusToJSON,
} from './';

/**
 * Initialization status of the Security Server
 * @export
 * @interface InitializationStatus
 */
export interface InitializationStatus {
    /**
     * whether a configuration anchor has been imported or not
     * @type {boolean}
     * @memberof InitializationStatus
     */
    isAnchorImported: boolean;
    /**
     * whether the server code of the security server has been initialized or not
     * @type {boolean}
     * @memberof InitializationStatus
     */
    isServerCodeInitialized: boolean;
    /**
     * whether the server owner of the security server has been initialized or not
     * @type {boolean}
     * @memberof InitializationStatus
     */
    isServerOwnerInitialized: boolean;
    /**
     * 
     * @type {TokenInitStatus}
     * @memberof InitializationStatus
     */
    softwareTokenInitStatus: TokenInitStatus;
}

export function InitializationStatusFromJSON(json: any): InitializationStatus {
    return InitializationStatusFromJSONTyped(json, false);
}

export function InitializationStatusFromJSONTyped(json: any, ignoreDiscriminator: boolean): InitializationStatus {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'isAnchorImported': json['is_anchor_imported'],
        'isServerCodeInitialized': json['is_server_code_initialized'],
        'isServerOwnerInitialized': json['is_server_owner_initialized'],
        'softwareTokenInitStatus': TokenInitStatusFromJSON(json['software_token_init_status']),
    };
}

export function InitializationStatusToJSON(value?: InitializationStatus | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'is_anchor_imported': value.isAnchorImported,
        'is_server_code_initialized': value.isServerCodeInitialized,
        'is_server_owner_initialized': value.isServerOwnerInitialized,
        'software_token_init_status': TokenInitStatusToJSON(value.softwareTokenInitStatus),
    };
}


