/* tslint:disable */
/* eslint-disable */
/**
 * X-Road Security Server Admin API
 * X-Road Security Server Admin API
 *
 * The version of the OpenAPI document: 1.0.28
 * Contact: info@niis.org
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * Endpoint for a service
 * @export
 * @interface Endpoint
 */
export interface Endpoint {
    /**
     * unique identifier
     * @type {string}
     * @memberof Endpoint
     */
    id?: string;
    /**
     * 
     * @type {string}
     * @memberof Endpoint
     */
    serviceCode: string;
    /**
     * http method mapped to this endpoint
     * @type {string}
     * @memberof Endpoint
     */
    method: EndpointMethodEnum;
    /**
     * relative path where this endpoint is mapped to
     * @type {string}
     * @memberof Endpoint
     */
    path: string;
    /**
     * has endpoint been generated from openapi3 description
     * @type {boolean}
     * @memberof Endpoint
     */
    readonly generated?: boolean;
}

export function EndpointFromJSON(json: any): Endpoint {
    return EndpointFromJSONTyped(json, false);
}

export function EndpointFromJSONTyped(json: any, ignoreDiscriminator: boolean): Endpoint {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': !exists(json, 'id') ? undefined : json['id'],
        'serviceCode': json['service_code'],
        'method': json['method'],
        'path': json['path'],
        'generated': !exists(json, 'generated') ? undefined : json['generated'],
    };
}

export function EndpointToJSON(value?: Endpoint | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'id': value.id,
        'service_code': value.serviceCode,
        'method': value.method,
        'path': value.path,
    };
}

/**
* @export
* @enum {string}
*/
export enum EndpointMethodEnum {
    Star = '*',
    GET = 'GET',
    POST = 'POST',
    PUT = 'PUT',
    DELETE = 'DELETE',
    PATCH = 'PATCH',
    HEAD = 'HEAD',
    OPTIONS = 'OPTIONS',
    TRACE = 'TRACE'
}


