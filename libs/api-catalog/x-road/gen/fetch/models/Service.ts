/* tslint:disable */
/* eslint-disable */
/**
 * X-Road Security Server Admin API
 * X-Road Security Server Admin API
 *
 * The version of the OpenAPI document: 1.0.28
 * Contact: info@niis.org
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    Endpoint,
    EndpointFromJSON,
    EndpointFromJSONTyped,
    EndpointToJSON,
} from './';

/**
 * service for the service description
 * @export
 * @interface Service
 */
export interface Service {
    /**
     * encoded service id, including client id
     * @type {string}
     * @memberof Service
     */
    id: string;
    /**
     * encoded service code and version
     * @type {string}
     * @memberof Service
     */
    fullServiceCode?: string;
    /**
     * encoded service code
     * @type {string}
     * @memberof Service
     */
    serviceCode: string;
    /**
     * service time out value
     * @type {number}
     * @memberof Service
     */
    timeout: number;
    /**
     * service title
     * @type {string}
     * @memberof Service
     */
    readonly title?: string;
    /**
     * service ssl auth
     * @type {boolean}
     * @memberof Service
     */
    sslAuth?: boolean;
    /**
     * count of acl subjects
     * @type {number}
     * @memberof Service
     */
    subjectsCount?: number;
    /**
     * service url
     * @type {string}
     * @memberof Service
     */
    url: string;
    /**
     * list of endpoints linked to this service
     * @type {Array<Endpoint>}
     * @memberof Service
     */
    endpoints?: Array<Endpoint>;
}

export function ServiceFromJSON(json: any): Service {
    return ServiceFromJSONTyped(json, false);
}

export function ServiceFromJSONTyped(json: any, ignoreDiscriminator: boolean): Service {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': json['id'],
        'fullServiceCode': !exists(json, 'full_service_code') ? undefined : json['full_service_code'],
        'serviceCode': json['service_code'],
        'timeout': json['timeout'],
        'title': !exists(json, 'title') ? undefined : json['title'],
        'sslAuth': !exists(json, 'ssl_auth') ? undefined : json['ssl_auth'],
        'subjectsCount': !exists(json, 'subjects_count') ? undefined : json['subjects_count'],
        'url': json['url'],
        'endpoints': !exists(json, 'endpoints') ? undefined : ((json['endpoints'] as Array<any>).map(EndpointFromJSON)),
    };
}

export function ServiceToJSON(value?: Service | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'id': value.id,
        'full_service_code': value.fullServiceCode,
        'service_code': value.serviceCode,
        'timeout': value.timeout,
        'ssl_auth': value.sslAuth,
        'subjects_count': value.subjectsCount,
        'url': value.url,
        'endpoints': value.endpoints === undefined ? undefined : ((value.endpoints as Array<any>).map(EndpointToJSON)),
    };
}


