/* tslint:disable */
/* eslint-disable */
/**
 * X-Road Security Server Admin API
 * X-Road Security Server Admin API
 *
 * The version of the OpenAPI document: 1.0.28
 * Contact: info@niis.org
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    GroupMember,
    GroupMemberFromJSON,
    GroupMemberFromJSONTyped,
    GroupMemberToJSON,
} from './';

/**
 * group
 * @export
 * @interface LocalGroup
 */
export interface LocalGroup {
    /**
     * unique identifier
     * @type {string}
     * @memberof LocalGroup
     */
    readonly id?: string;
    /**
     * group code
     * @type {string}
     * @memberof LocalGroup
     */
    code: string;
    /**
     * group description
     * @type {string}
     * @memberof LocalGroup
     */
    description: string;
    /**
     * member count
     * @type {number}
     * @memberof LocalGroup
     */
    memberCount?: number;
    /**
     * last time updated
     * @type {Date}
     * @memberof LocalGroup
     */
    updatedAt?: Date;
    /**
     * group members
     * @type {Array<GroupMember>}
     * @memberof LocalGroup
     */
    members?: Array<GroupMember>;
}

export function LocalGroupFromJSON(json: any): LocalGroup {
    return LocalGroupFromJSONTyped(json, false);
}

export function LocalGroupFromJSONTyped(json: any, ignoreDiscriminator: boolean): LocalGroup {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': !exists(json, 'id') ? undefined : json['id'],
        'code': json['code'],
        'description': json['description'],
        'memberCount': !exists(json, 'member_count') ? undefined : json['member_count'],
        'updatedAt': !exists(json, 'updated_at') ? undefined : (new Date(json['updated_at'])),
        'members': !exists(json, 'members') ? undefined : ((json['members'] as Array<any>).map(GroupMemberFromJSON)),
    };
}

export function LocalGroupToJSON(value?: LocalGroup | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'code': value.code,
        'description': value.description,
        'member_count': value.memberCount,
        'updated_at': value.updatedAt === undefined ? undefined : (value.updatedAt.toISOString()),
        'members': value.members === undefined ? undefined : ((value.members as Array<any>).map(GroupMemberToJSON)),
    };
}


