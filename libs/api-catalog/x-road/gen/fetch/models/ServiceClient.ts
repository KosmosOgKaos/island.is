/* tslint:disable */
/* eslint-disable */
/**
 * X-Road Security Server Admin API
 * X-Road Security Server Admin API
 *
 * The version of the OpenAPI document: 1.0.28
 * Contact: info@niis.org
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    ServiceClientType,
    ServiceClientTypeFromJSON,
    ServiceClientTypeFromJSONTyped,
    ServiceClientTypeToJSON,
} from './';

/**
 * service client. May be a subsystem, local group, or a global group
 * @export
 * @interface ServiceClient
 */
export interface ServiceClient {
    /**
     * subject id - can be a subsystem id <instance_id>:<member_class>:<member_code>:<subsystem> | globalgroup id <instance_id>:<group_code> | localgroup resource id in number format <id>
     * @type {string}
     * @memberof ServiceClient
     */
    id: string;
    /**
     * name of the ServiceClient - can be the name of a member or the description of a group
     * @type {string}
     * @memberof ServiceClient
     */
    readonly name?: string;
    /**
     * group code in case the object is a local group
     * @type {string}
     * @memberof ServiceClient
     */
    readonly localGroupCode?: string;
    /**
     * 
     * @type {ServiceClientType}
     * @memberof ServiceClient
     */
    serviceClientType?: ServiceClientType;
    /**
     * time when access right were given at. When listing client's service clients without specifying the service, the time when first service access right was given to this service client for any service. When listing service clients for a specific service, time when service client was added permission to that service.
     * @type {Date}
     * @memberof ServiceClient
     */
    readonly rightsGivenAt?: Date;
}

export function ServiceClientFromJSON(json: any): ServiceClient {
    return ServiceClientFromJSONTyped(json, false);
}

export function ServiceClientFromJSONTyped(json: any, ignoreDiscriminator: boolean): ServiceClient {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': json['id'],
        'name': !exists(json, 'name') ? undefined : json['name'],
        'localGroupCode': !exists(json, 'local_group_code') ? undefined : json['local_group_code'],
        'serviceClientType': !exists(json, 'service_client_type') ? undefined : ServiceClientTypeFromJSON(json['service_client_type']),
        'rightsGivenAt': !exists(json, 'rights_given_at') ? undefined : (new Date(json['rights_given_at'])),
    };
}

export function ServiceClientToJSON(value?: ServiceClient | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'id': value.id,
        'service_client_type': ServiceClientTypeToJSON(value.serviceClientType),
    };
}


